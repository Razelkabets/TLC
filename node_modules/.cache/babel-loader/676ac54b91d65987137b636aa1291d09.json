{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { fetchVolunteering } from '../../../store/volunteeringDataSlice';\nimport { fetchAssociations } from '../../../store/AssociationDataSlice';\nimport { useAppDispatch } from '../../../store/store';\nimport \"./AllVolunteeringPage.scss\";\nimport SubmitButton from '../../layout/button/SubmitButton';\nimport VolunteeringPage from '../volunteeringPage/VolunteeringPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VolunteeringGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    volunteering\n  } = useSelector(state => state.volunteering);\n  useEffect(() => {\n    dispatch(fetchVolunteering());\n    dispatch(fetchAssociations());\n  }, []);\n  const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\n  const [volunteeringName, setVolunteeringName] = useState(\"\");\n\n  const openVolunteeringCardHandler = volunteer => {\n    setOpenVolunteeringCard(true);\n    setVolunteeringName(volunteer);\n  };\n\n  const passFilter = item => {\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"new\":\n        if (item.isNewAssociation) return true;else return false;\n\n      case \"popular\":\n        if (item.isPopular) return true;else return false;\n\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [openVolunteeringCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volunteering-container\",\n        onClick: () => setOpenVolunteeringCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-volunteering-page\",\n        onClick: () => setOpenVolunteeringCard(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(VolunteeringPage, {\n        volunteering: volunteeringName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: !openVolunteeringCard && volunteering.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          value: \"Sign up here\",\n          onClick: () => openVolunteeringCardHandler(item.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n\n_s(VolunteeringGrid, \"Gm2Mwbghvd44H73vai4Ca+ZREPc=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n\n_c = VolunteeringGrid;\nexport default VolunteeringGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"VolunteeringGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx"],"names":["Fragment","useEffect","useState","useSelector","fetchVolunteering","fetchAssociations","useAppDispatch","SubmitButton","VolunteeringPage","VolunteeringGrid","filter","dispatch","volunteering","state","openVolunteeringCard","setOpenVolunteeringCard","volunteeringName","setVolunteeringName","openVolunteeringCardHandler","volunteer","passFilter","item","isNewAssociation","isPopular","opening","openingHour","split","closing","closingHour","date","Date","now","getHours","map","name","address"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { fetchVolunteering } from '../../../store/volunteeringDataSlice';\nimport { fetchAssociations } from '../../../store/AssociationDataSlice';\nimport { useAppDispatch } from '../../../store/store';\nimport \"./AllVolunteeringPage.scss\"\nimport SubmitButton from '../../layout/button/SubmitButton';\nimport VolunteeringPage from '../volunteeringPage/VolunteeringPage';\n\nconst VolunteeringGrid = ({ filter }: any) => {\n\n    const dispatch = useAppDispatch();\n    const { volunteering } = useSelector((state: any) => state.volunteering);\n  \n    useEffect(() => {\n      dispatch(fetchVolunteering());\n      dispatch(fetchAssociations());\n    }, []);\n\n    const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\n    const [volunteeringName, setVolunteeringName] = useState(\"\");\n    \n    const openVolunteeringCardHandler = (volunteer: string) => {\n      setOpenVolunteeringCard(true);\n      setVolunteeringName(volunteer);\n    };\n\n    const passFilter = (item: any) => {\n      switch (filter) {\n        case \"all\":\n          return true;\n        case \"new\":\n          if (item.isNewAssociation) return true;\n          else return false;\n        case \"popular\":\n          if (item.isPopular) return true;\n          else return false;\n        case \"open\":\n          const opening = item.openingHour.split(\":\")[0] * 1;\n          const closing = item.closingHour.split(\":\")[0] * 1;\n          const date = new Date();\n          const now = date.getHours();\n          if (now >= opening && now <= closing) return true;\n          else return false;\n        default:\n          return true;\n      }\n    };\n    \n    return (\n      <Fragment>\n         {openVolunteeringCard && (\n           <Fragment>\n             <button\n             className=\"volunteering-container\"\n             onClick={() => setOpenVolunteeringCard(false)}\n           ></button>\n           <button\n             className=\"close-volunteering-page\"\n             onClick={() => setOpenVolunteeringCard(false)}\n           >\n             X\n           </button>\n           <br />\n          <VolunteeringPage volunteering={volunteeringName}></VolunteeringPage>\n          </Fragment>\n      )}\n        <div className='feed'>\n        {!openVolunteeringCard && volunteering.map((item: any) => (\n              <div className='feed-container' key={item.name}>\n                  <div><h1>{item.name}</h1></div>\n                  <div><h3>{item.date}</h3></div>\n                  <div><h3>{item.address}</h3></div>\n                  <SubmitButton value={\"Sign up here\"} onClick={() => openVolunteeringCardHandler(item.name)}></SubmitButton>\n              </div>\n          ))}\n        </div>\n      </Fragment>\n    );\n}\n\nexport default VolunteeringGrid;"]},"metadata":{},"sourceType":"module"}