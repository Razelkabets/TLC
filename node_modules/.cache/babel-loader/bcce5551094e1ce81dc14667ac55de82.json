{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EraParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass EraParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 140);\n\n    _defineProperty(this, \"incompatibleTokens\", ['R', 'u', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return match.era(dateString, {\n          width: 'abbreviated'\n        }) || match.era(dateString, {\n          width: 'narrow'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return match.era(dateString, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return match.era(dateString, {\n          width: 'wide'\n        }) || match.era(dateString, {\n          width: 'abbreviated'\n        }) || match.era(dateString, {\n          width: 'narrow'\n        });\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setUTCFullYear(value, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.EraParser = EraParser;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/node_modules/date-fns/parse/_lib/parsers/EraParser.js"],"names":["Object","defineProperty","exports","value","EraParser","_Parser","require","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","match","era","width","set","date","flags","setUTCFullYear","setUTCHours"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCN,KAAnC,EAA0C;AAAE,MAAIM,GAAG,IAAID,GAAX,EAAgB;AAAER,IAAAA,MAAM,CAACC,cAAP,CAAsBO,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEN,MAAAA,KAAK,EAAEA,KAAT;AAAgBO,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEJ,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWN,KAAX;AAAmB;;AAAC,SAAOK,GAAP;AAAa;;AAEjN,MAAMJ,SAAN,SAAwBC,OAAO,CAACQ,MAAhC,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;;AAEAR,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,GAAnB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA7B,CAAf;AACD;;AAEDS,EAAAA,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;AAC9B,YAAQD,KAAR;AACE;AACA,WAAK,GAAL;AACA,WAAK,IAAL;AACA,WAAK,KAAL;AACE,eAAOC,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC3BI,UAAAA,KAAK,EAAE;AADoB,SAAtB,KAEDF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC1BI,UAAAA,KAAK,EAAE;AADmB,SAAtB,CAFN;AAKF;;AAEA,WAAK,OAAL;AACE,eAAOF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC3BI,UAAAA,KAAK,EAAE;AADoB,SAAtB,CAAP;AAGF;;AAEA,WAAK,MAAL;AACA;AACE,eAAOF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC3BI,UAAAA,KAAK,EAAE;AADoB,SAAtB,KAEDF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC1BI,UAAAA,KAAK,EAAE;AADmB,SAAtB,CAFC,IAIDF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAC1BI,UAAAA,KAAK,EAAE;AADmB,SAAtB,CAJN;AApBJ;AA4BD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcrB,KAAd,EAAqB;AACtBqB,IAAAA,KAAK,CAACJ,GAAN,GAAYjB,KAAZ;AACAoB,IAAAA,IAAI,CAACE,cAAL,CAAoBtB,KAApB,EAA2B,CAA3B,EAA8B,CAA9B;AACAoB,IAAAA,IAAI,CAACG,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,WAAOH,IAAP;AACD;;AA7CoC;;AAiDvCrB,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EraParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass EraParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 140);\n\n    _defineProperty(this, \"incompatibleTokens\", ['R', 'u', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return match.era(dateString, {\n          width: 'abbreviated'\n        }) || match.era(dateString, {\n          width: 'narrow'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return match.era(dateString, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return match.era(dateString, {\n          width: 'wide'\n        }) || match.era(dateString, {\n          width: 'abbreviated'\n        }) || match.era(dateString, {\n          width: 'narrow'\n        });\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setUTCFullYear(value, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.EraParser = EraParser;"]},"metadata":{},"sourceType":"script"}