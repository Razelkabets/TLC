{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchFounders = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n  const response = await axios.get(\"http://localhost:8080/founders\");\n  return response.data;\n});\nconst chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    chefs: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchFounders.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchFounders.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.chefs = action.payload.result;\n    }).addCase(fetchChefs.rejected, (state, action) => {\n      state.isLoading = false; //console.log(action.error.message);\n    });\n  }\n\n});\nexport const chefsActions = chefsSlice.actions;\nexport default chefsSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/tlc/src/store/founderDataSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchFounders","response","get","data","chefsSlice","name","initialState","chefs","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","fetchChefs","rejected","chefsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AAC5E,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,gCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAH4C,CAAtC;AAKP,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFe;AAM7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GANmB;;AAU7BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,aAAa,CAACe,OADzB,EACkC,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACjDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,aAAa,CAACiB,SAJzB,EAIoC,CAACN,KAAD,EAAQK,MAAR,KAAmB;AACnDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAaS,MAAM,CAACE,OAAP,CAAeC,MAA5B;AACD,KAPH,EAQGL,OARH,CAQWM,UAAU,CAACC,QARtB,EAQgC,CAACV,KAAD,EAAQK,MAAR,KAAmB;AAC/CL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB,CAD+C,CAE/C;AACD,KAXH;AAYD;;AAvB4B,CAAD,CAA9B;AA0BA,OAAO,MAAMc,YAAY,GAAGlB,UAAU,CAACmB,OAAhC;AAEP,eAAenB,UAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchFounders = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n  const response = await axios.get(\"http://localhost:8080/founders\");\n  return response.data;\n});\n\nconst chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    chefs: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchFounders.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchFounders.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.chefs= action.payload.result;        \n      })\n      .addCase(fetchChefs.rejected, (state, action) => {\n        state.isLoading = false;\n        //console.log(action.error.message);\n      });\n  },\n});\n\nexport const chefsActions = chefsSlice.actions;\n\nexport default chefsSlice;\n\n\n"]},"metadata":{},"sourceType":"module"}