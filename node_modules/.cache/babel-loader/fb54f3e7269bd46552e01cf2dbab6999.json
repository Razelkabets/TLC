{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchFounders = createAsyncThunk(\"founders/fetchFounders\", async () => {\n  const response = await axios.get(\"http://localhost:8080/founders\");\n  return response.data;\n});\nconst foundersSlice = createSlice({\n  name: \"founders\",\n  initialState: {\n    founders: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchFounders.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchFounders.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.founders = action.payload.result;\n    }).addCase(fetchFounders.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n\n});\nexport const foundersActions = foundersSlice.actions;\nexport default foundersSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/store/founderDataSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchFounders","response","get","data","foundersSlice","name","initialState","founders","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","rejected","foundersActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,wBAAD,EAA2B,YAAY;AAClF,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,gCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAH4C,CAAtC;AAKP,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFkB;AAMhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GANsB;;AAUhCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,aAAa,CAACe,OADzB,EACkC,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACjDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,aAAa,CAACiB,SAJzB,EAIoC,CAACN,KAAD,EAAQK,MAAR,KAAmB;AACnDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,QAAN,GAAgBS,MAAM,CAACE,OAAP,CAAeC,MAA/B;AACD,KAPH,EAQGL,OARH,CAQWd,aAAa,CAACoB,QARzB,EAQmC,CAACT,KAAD,EAAQK,MAAR,KAAmB;AAClDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACD,KAVH;AAWD;;AAtB+B,CAAD,CAAjC;AAyBA,OAAO,MAAMa,eAAe,GAAGjB,aAAa,CAACkB,OAAtC;AAEP,eAAelB,aAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchFounders = createAsyncThunk(\"founders/fetchFounders\", async () => {\r\n  const response = await axios.get(\"http://localhost:8080/founders\");\r\n  return response.data;\r\n});\r\n\r\nconst foundersSlice = createSlice({\r\n  name: \"founders\",\r\n  initialState: {\r\n    founders: [],\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    toggle(state) {\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchFounders.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchFounders.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.founders= action.payload.result;        \r\n      })\r\n      .addCase(fetchFounders.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const foundersActions = foundersSlice.actions;\r\n\r\nexport default foundersSlice;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}