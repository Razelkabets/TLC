{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/TLC/src/components/pages/allAssociationsPage/AssociationsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport \"./AllAssociations.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssociationsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [associations, setAssociations] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8080/auth/getByRole/association\");\n      setAssociations(res.data.result);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const passFilter = item => {\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"new\":\n        if (item.associationDetails.isNewAssociation) return true;else return false;\n\n      case \"popular\":\n        if (item.associationDetails.isPopular) return true;else return false;\n\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"associations-grid\",\n    children: associations && associations.map((item, index) => {\n      if (passFilter(item)) return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/associations/${item.name}`,\n        className: \"to-association-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: \"\",\n          img: item.associationDetails.image\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssociationsGrid, \"/SUJSMB6hpIehLReZH1BZmAvZgY=\");\n\n_c = AssociationsGrid;\nexport default AssociationsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssociationsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/components/pages/allAssociationsPage/AssociationsGrid.tsx"],"names":["BeigeCard","Link","useEffect","useState","axios","AssociationsGrid","filter","associations","setAssociations","fetchData","res","get","data","result","err","console","log","passFilter","item","associationDetails","isNewAssociation","isPopular","opening","openingHour","split","closing","closingHour","date","Date","now","getHours","map","index","name","image"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AAEA,OAAO,wBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAKA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAE5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMM,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,kDAAV,CAAlB;AACAH,MAAAA,eAAe,CAACE,GAAG,CAACE,IAAJ,CAASC,MAAV,CAAf;AACD,KAHD,CAIA,OAAMC,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GARD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMQ,UAAU,GAAIC,IAAD,IAAe;AAChC,YAAQZ,MAAR;AACE,WAAK,KAAL;AACE,eAAO,IAAP;;AACF,WAAK,KAAL;AACE,YAAIY,IAAI,CAACC,kBAAL,CAAwBC,gBAA5B,EAA8C,OAAO,IAAP,CAA9C,KACK,OAAO,KAAP;;AACP,WAAK,SAAL;AACE,YAAIF,IAAI,CAACC,kBAAL,CAAwBE,SAA5B,EAAuC,OAAO,IAAP,CAAvC,KACK,OAAO,KAAP;;AACP,WAAK,MAAL;AACE,cAAMC,OAAO,GAAGJ,IAAI,CAACK,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMC,OAAO,GAAGP,IAAI,CAACQ,WAAL,CAAiBF,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMG,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,cAAMC,GAAG,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,YAAID,GAAG,IAAIP,OAAP,IAAkBO,GAAG,IAAIJ,OAA7B,EAAsC,OAAO,IAAP,CAAtC,KACK,OAAO,KAAP;;AACP;AACE,eAAO,IAAP;AAjBJ;AAmBD,GApBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACGlB,YAAY,IAAIA,YAAY,CAACwB,GAAb,CAAiB,CAACb,IAAD,EAAYc,KAAZ,KAA2B;AAC3D,UAAIf,UAAU,CAACC,IAAD,CAAd,EACE,oBACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAG,iBAAgBA,IAAI,CAACe,IAAK,EADjC;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA,+BAKE,QAAC,SAAD;AAEE,UAAA,KAAK,EAAEf,IAAI,CAACe,IAFd;AAGE,UAAA,MAAM,EAAE,EAHV;AAIE,UAAA,GAAG,EAAEf,IAAI,CAACC,kBAAL,CAAwBe;AAJ/B,WACOhB,IAAI,CAACe,IADZ;AAAA;AAAA;AAAA;AAAA;AALF,SAGOD,KAHP;AAAA;AAAA;AAAA;AAAA,cADF;AAcH,KAhBgB;AADnB;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzDD;;GAAM3B,gB;;KAAAA,gB;AA0DN,eAAeA,gBAAf","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AllAssociations.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../../store/store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\r\nimport { fetchNewAssociations } from \"../../../store/newAssociationsSlice\";\r\nimport { fetchPopularAssociations } from \"../../../store/popularAssociationsSlice\";\r\nimport { fetchOpenAssociations } from \"../../../store/openAssociationsSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst AssociationsGrid = ({ filter }: any) => {\r\n\r\n  const [associations, setAssociations] = useState([])\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8080/auth/getByRole/association\")\r\n      setAssociations(res.data.result)\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, []);\r\n  const passFilter = (item: any) => {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return true;\r\n      case \"new\":\r\n        if (item.associationDetails.isNewAssociation) return true;\r\n        else return false;\r\n      case \"popular\":\r\n        if (item.associationDetails.isPopular) return true;\r\n        else return false;\r\n      case \"open\":\r\n        const opening = item.openingHour.split(\":\")[0] * 1;\r\n        const closing = item.closingHour.split(\":\")[0] * 1;\r\n        const date = new Date();\r\n        const now = date.getHours();\r\n        if (now >= opening && now <= closing) return true;\r\n        else return false;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"associations-grid\">\r\n      {associations && associations.map((item: any, index: any) => {\r\n        if (passFilter(item))\r\n          return (\r\n            <Link\r\n              to={`/associations/${item.name}`}\r\n              className=\"to-association-btn\"\r\n              key={index}\r\n            >\r\n              <BeigeCard\r\n                key={item.name}\r\n                title={item.name}\r\n                detail={\"\"}\r\n                img={item.associationDetails.image}\r\n              ></BeigeCard>\r\n            </Link>\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default AssociationsGrid;\r\n"]},"metadata":{},"sourceType":"module"}