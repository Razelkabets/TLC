{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchVolunteering } from \"../../../store/volunteeringDataSlice\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport \"./AllVolunteeringPage.scss\";\nimport SubmitButton from \"../../layout/button/SubmitButton\";\nimport VolunteeringPage from \"../volunteeringPage/VolunteeringPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VolunteeringGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    volunteering\n  } = useSelector(state => state.volunteering);\n  useEffect(() => {\n    dispatch(fetchVolunteering());\n    dispatch(fetchAssociations());\n  }, []);\n  const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\n  const [selectedVolunteering, setSelectedVolunteering] = useState({});\n\n  const openVolunteeringCardHandler = volunteer => {\n    setOpenVolunteeringCard(true);\n    setSelectedVolunteering(volunteer);\n  }; // Function definition with passing two arrays\n\n\n  function findCommonElement(array1, array2) {\n    // Loop for array1\n    for (let i = 0; i < array1.length; i++) {\n      // Loop for array2\n      for (let j = 0; j < array2.length; j++) {\n        // Compare the element of each and\n        // every element from both of the\n        // arrays\n        if (array1[i] === array2[j]) {\n          // Return if common element found\n          return true;\n        }\n      }\n    } // Return if no common element exist\n\n\n    return false;\n  }\n\n  const passFilter = item => {\n    const foryouSuggestions = volunteering === null || volunteering === void 0 ? void 0 : volunteering.filter(item => {\n      var _item$keywords$, _item$keywords$2;\n\n      const keywords = localStorage.getItem(\"keywords\");\n      const splitedKeywords = keywords === null || keywords === void 0 ? void 0 : keywords.split(\",\");\n      const found = (item === null || item === void 0 ? void 0 : (_item$keywords$ = item.keywords[0]) === null || _item$keywords$ === void 0 ? void 0 : _item$keywords$.length) !== 0 ? (_item$keywords$2 = item.keywords[0]) === null || _item$keywords$2 === void 0 ? void 0 : _item$keywords$2.split(\",\") : \"\";\n      console.log(found);\n      const p = findCommonElement(found, splitedKeywords);\n      console.log(p);\n      return p;\n    }); // const foundResult = found?.some(\n    //   (r: any) => splitedKeywords.indexOf(r) >= 0\n    // );\n    // return foundResult;\n    //})[0]?.keywords;\n\n    console.log(foryouSuggestions);\n    const volunteeringFormated = formatDate(item === null || item === void 0 ? void 0 : item.date);\n    const date = new Date();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const nextDay = date.getDate() + 1;\n    const today = date.getDate() + \"/\" + month + \"/\" + date.getFullYear();\n    const tommorrow = nextDay + \"/\" + month + \"/\" + date.getFullYear();\n    let keywordIsEqual;\n    const isForYou = foryouSuggestions === null || foryouSuggestions === void 0 ? void 0 : foryouSuggestions.map(suggestion => {\n      var _item$keywords;\n\n      item === null || item === void 0 ? void 0 : (_item$keywords = item.keywords) === null || _item$keywords === void 0 ? void 0 : _item$keywords.map(keyword => {\n        console.log(keyword);\n        if (suggestion === keyword) keywordIsEqual = true;else keywordIsEqual = false;\n      });\n      return keywordIsEqual;\n    });\n\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"today\":\n        if (today === volunteeringFormated) return true;else return false;\n\n      case \"tommorrow\":\n        if (tommorrow === volunteeringFormated) return true;else return false;\n\n      case \"foryou\":\n        if (isForYou) return true;\n        return false;\n\n      default:\n        return true;\n    }\n  };\n\n  function formatDate(Idate) {\n    const date = new Date(Idate);\n    const currentMonth = date.getMonth() + 1;\n    const monthString = currentMonth >= 10 ? currentMonth : `0${currentMonth}`;\n    const currentDate = date.getDate(); //const dateString = currentDate >= 10 ? currentDate : `0${currentDate}`;\n\n    return `${currentDate}/${monthString}/${date.getFullYear()}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [openVolunteeringCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volunteering-container\",\n        onClick: () => setOpenVolunteeringCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-volunteering-page\",\n        onClick: () => setOpenVolunteeringCard(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VolunteeringPage, {\n        volunteering: selectedVolunteering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: !openVolunteeringCard && volunteering.map((item, index) => {\n        if (passFilter(item)) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volunteering-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volunteering-date\",\n            children: formatDate(item.date) !== \"NaN/0NaN/NaN\" ? formatDate(item.date) : \"Unknown Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"address\",\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-volunteer-button\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              value: \"Sign up here\",\n              onClick: () => openVolunteeringCardHandler(item.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VolunteeringGrid, \"LlBkCOAvj7Eh+aaETsVN8G/L0Os=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n\n_c = VolunteeringGrid;\nexport default VolunteeringGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"VolunteeringGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx"],"names":["Fragment","useEffect","useState","useSelector","fetchVolunteering","fetchAssociations","useAppDispatch","SubmitButton","VolunteeringPage","VolunteeringGrid","filter","dispatch","volunteering","state","openVolunteeringCard","setOpenVolunteeringCard","selectedVolunteering","setSelectedVolunteering","openVolunteeringCardHandler","volunteer","findCommonElement","array1","array2","i","length","j","passFilter","item","foryouSuggestions","keywords","localStorage","getItem","splitedKeywords","split","found","console","log","p","volunteeringFormated","formatDate","date","Date","month","String","getMonth","padStart","nextDay","getDate","today","getFullYear","tommorrow","keywordIsEqual","isForYou","map","suggestion","keyword","Idate","currentMonth","monthString","currentDate","index","name","address"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { fetchVolunteering } from \"../../../store/volunteeringDataSlice\";\r\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\r\nimport { useAppDispatch } from \"../../../store/store\";\r\nimport \"./AllVolunteeringPage.scss\";\r\nimport SubmitButton from \"../../layout/button/SubmitButton\";\r\nimport VolunteeringPage from \"../volunteeringPage/VolunteeringPage\";\r\n\r\nconst VolunteeringGrid = ({ filter }: any) => {\r\n  const dispatch = useAppDispatch();\r\n  const { volunteering } = useSelector((state: any) => state.volunteering);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchVolunteering());\r\n    dispatch(fetchAssociations());\r\n  }, []);\r\n\r\n  const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\r\n  const [selectedVolunteering, setSelectedVolunteering] = useState({});\r\n\r\n  const openVolunteeringCardHandler = (volunteer: object) => {\r\n    setOpenVolunteeringCard(true);\r\n    setSelectedVolunteering(volunteer);\r\n  };\r\n\r\n  // Function definition with passing two arrays\r\n  function findCommonElement(array1: any, array2: any) {\r\n    // Loop for array1\r\n    for (let i = 0; i < array1.length; i++) {\r\n      // Loop for array2\r\n      for (let j = 0; j < array2.length; j++) {\r\n        // Compare the element of each and\r\n        // every element from both of the\r\n        // arrays\r\n        if (array1[i] === array2[j]) {\r\n          // Return if common element found\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return if no common element exist\r\n    return false;\r\n  }\r\n\r\n  const passFilter: any = (item: any) => {\r\n    const foryouSuggestions: any = volunteering?.filter((item: any) => {\r\n      const keywords: any = localStorage.getItem(\"keywords\");\r\n      const splitedKeywords = keywords?.split(\",\");\r\n      const found: any =\r\n        item?.keywords[0]?.length !== 0 ? item.keywords[0]?.split(\",\") : \"\";\r\n      console.log(found);\r\n\r\n      const p = findCommonElement(found, splitedKeywords);\r\n      console.log(p);\r\n      return p;\r\n    });\r\n    // const foundResult = found?.some(\r\n    //   (r: any) => splitedKeywords.indexOf(r) >= 0\r\n    // );\r\n    // return foundResult;\r\n    //})[0]?.keywords;\r\n\r\n    console.log(foryouSuggestions)\r\n    const volunteeringFormated: any = formatDate(item?.date);\r\n\r\n    const date = new Date();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const nextDay = date.getDate() + 1;\r\n    const today = date.getDate() + \"/\" + month + \"/\" + date.getFullYear();\r\n\r\n    const tommorrow = nextDay + \"/\" + month + \"/\" + date.getFullYear();\r\n    let keywordIsEqual: boolean;\r\n    const isForYou: any = foryouSuggestions?.map((suggestion: any) => {\r\n      item?.keywords?.map((keyword: any) => {\r\n        console.log(keyword);\r\n        if (suggestion === keyword) keywordIsEqual = true;\r\n        else keywordIsEqual = false;\r\n      });\r\n      return keywordIsEqual;\r\n    });\r\n    switch (filter) {\r\n      case \"all\":\r\n        return true;\r\n      case \"today\":\r\n        if (today === volunteeringFormated) return true;\r\n        else return false;\r\n      case \"tommorrow\":\r\n        if (tommorrow === volunteeringFormated) return true;\r\n        else return false;\r\n      case \"foryou\":\r\n        if (isForYou) return true;\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  function formatDate(Idate: any) {\r\n    const date = new Date(Idate);\r\n    const currentMonth = date.getMonth() + 1;\r\n    const monthString = currentMonth >= 10 ? currentMonth : `0${currentMonth}`;\r\n    const currentDate = date.getDate();\r\n    //const dateString = currentDate >= 10 ? currentDate : `0${currentDate}`;\r\n    return `${currentDate}/${monthString}/${date.getFullYear()}`;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {openVolunteeringCard && (\r\n        <Fragment>\r\n          <button\r\n            className=\"volunteering-container\"\r\n            onClick={() => setOpenVolunteeringCard(false)}\r\n          ></button>\r\n          <button\r\n            className=\"close-volunteering-page\"\r\n            onClick={() => setOpenVolunteeringCard(false)}\r\n          >\r\n            X\r\n          </button>\r\n          <br />\r\n          <VolunteeringPage\r\n            volunteering={selectedVolunteering}\r\n          ></VolunteeringPage>\r\n        </Fragment>\r\n      )}\r\n      <div className=\"feed\">\r\n        {!openVolunteeringCard &&\r\n          volunteering.map((item: any, index: any) => {\r\n            if (passFilter(item))\r\n              return (\r\n                <div className=\"feed-container\" key={index}>\r\n                  <span className=\"volunteering-name\">{item.name}</span>\r\n                  <span className=\"volunteering-date\">\r\n                    {formatDate(item.date) !== \"NaN/0NaN/NaN\"\r\n                      ? formatDate(item.date)\r\n                      : \"Unknown Date\"}\r\n                  </span>\r\n\r\n                  <span className=\"address\">{item.address}</span>\r\n                  <div className=\"submit-volunteer-button\">\r\n                    <SubmitButton\r\n                      value={\"Sign up here\"}\r\n                      onClick={() => openVolunteeringCardHandler(item.name)}\r\n                    ></SubmitButton>\r\n                  </div>\r\n                </div>\r\n              );\r\n          })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VolunteeringGrid;\r\n"]},"metadata":{},"sourceType":"module"}