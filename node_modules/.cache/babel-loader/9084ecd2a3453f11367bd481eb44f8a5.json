{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/tlc/src/components/pages/associationPage/AssociationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport clock from \"../../../assets/clock-icon.svg\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./AssociationPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssociationPage = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const {\n    associations\n  } = useSelector(state => state.associations);\n  const {\n    dishes\n  } = useSelector(state => state.dishes);\n  useEffect(() => {\n    dispatch(fetchAssociations());\n    dispatch(fetchDishes());\n  }, []);\n\n  const openDishCardHandler = dish => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params = useParams();\n  const associationDetails = associations.filter(item => item.name === params.associationName);\n  const associationDishes = dishes.filter(item => item.association === params.associationName);\n  const mealsTypes = [\"all\", \"Breakfast\", \"Lunch\", \"Dinner\"];\n  const [filterType, setFilterType] = useState(\"all\");\n\n  const passFilter = item => {\n    switch (filterType) {\n      case \"all\":\n        return true;\n\n      case \"Breakfast\":\n        if (item.dishType === \"Breakfast\") {\n          return true;\n        } else return false;\n\n      case \"Lunch\":\n        if (item.dishType === \"Lunch\") {\n          return true;\n        } else return false;\n\n      case \"Dinner\":\n        if (item.dishType === \"Dinner\") {\n          return true;\n        } else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  const filteredArr = associationDishes.filter(item => passFilter(item));\n  const opening = associationDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = associationDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen = now >= opening && now <= closing;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"association-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), openDishCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dish-container\",\n        onClick: () => setOpenDishCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-dish-page\",\n        onClick: () => setOpenDishCard(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DishPage, {\n        dish: dishName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), !openDishCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"association-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: associationDetails[0].desktopImage,\n        alt: \"association\",\n        className: \"association-page-img\",\n        srcSet: `${associationDetails[0].bigImage} 800w`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: params.associationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: associationDetails[0].chef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), ifOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: clock,\n          alt: \"clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Open now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"categories-div\",\n        children: mealsTypes.map(typeName => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilterType(typeName),\n          className: \"type-meal-link\",\n          children: typeName\n        }, typeName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-by-type\",\n        children: mealsTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dishes-container\",\n          children: filteredArr.map(dish => type === dish.dishType && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"to-dish-btn\",\n            onClick: () => openDishCardHandler(dish.name),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"association-item\",\n              children: /*#__PURE__*/_jsxDEV(DishSmallCard, {\n                img: dish.mobileImage,\n                signatureDesktopImage: dish.desktopImage,\n                title: dish.name,\n                detail: dish.description,\n                price: dish.price\n              }, dish.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, dish._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this))\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssociationPage, \"DijMpiz1Tx2B3K02Ovh4y+W2Ugg=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useParams];\n});\n\n_c = AssociationPage;\nexport default AssociationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssociationPage\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/tlc/src/components/pages/associationPage/AssociationPage.tsx"],"names":["clock","DishSmallCard","DishPage","useParams","Footer","Header","useSelector","useAppDispatch","useEffect","Fragment","useState","fetchAssociations","fetchDishes","AssociationPage","filter","openDishCard","setOpenDishCard","dishName","setDishName","dispatch","associations","state","dishes","openDishCardHandler","dish","params","associationDetails","item","name","associationName","associationDishes","association","mealsTypes","filterType","setFilterType","passFilter","dishType","filteredArr","opening","openingHour","split","closing","closingHour","now","Date","getHours","ifOpen","desktopImage","bigImage","chef","map","typeName","type","mobileImage","description","price","key","_id"],"mappings":"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","sourcesContent":["import clock from \"../../../assets/clock-icon.svg\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./AssociationPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\n\nconst AssociationPage = ({ filter }: any) => {\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n  const { associations } = useSelector((state: any) => state.associations);\n  const { dishes } = useSelector((state: any) => state.dishes);\n\n  useEffect(() => {\n    dispatch(fetchAssociations());\n    dispatch(fetchDishes());\n  }, []);\n\n  const openDishCardHandler = (dish: string) => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params: any = useParams();\n\n  const associationDetails = associations.filter(\n    (item: any) => item.name === params.associationName\n  );\n\n  const associationDishes = dishes.filter(\n    (item: any) => item.association === params.associationName\n  );\n\n  const mealsTypes: string[] = [\"all\", \"Breakfast\", \"Lunch\", \"Dinner\"];\n  const [filterType, setFilterType] = useState(\"all\");\n\n  const passFilter = (item: any) => {\n    switch (filterType) {\n      case \"all\":\n        return true;\n      case \"Breakfast\":\n        if (item.dishType === \"Breakfast\") {\n          return true;\n        } else return false;\n      case \"Lunch\":\n        if (item.dishType === \"Lunch\") {\n          return true;\n        } else return false;\n      case \"Dinner\":\n        if (item.dishType === \"Dinner\") {\n          return true;\n        } else return false;\n      default:\n        return true;\n    }\n  };\n  const filteredArr = associationDishes.filter((item: any) => passFilter(item));\n\n  const opening = associationDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = associationDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen: boolean = now >= opening && now <= closing;\n  return (\n    <div className=\"association-page\">\n      <Header />\n      {openDishCard && (\n        <Fragment>\n          <button\n            className=\"dish-container\"\n            onClick={() => setOpenDishCard(false)}\n          ></button>\n          <button\n            className=\"close-dish-page\"\n            onClick={() => setOpenDishCard(false)}\n          >\n            X\n          </button>\n          <br />\n          <DishPage dish={dishName}></DishPage>\n        </Fragment>\n      )}\n      {!openDishCard && (\n        <div className=\"association-page-container\">\n          <img\n            src={associationDetails[0].desktopImage}\n            alt=\"association\"\n            className=\"association-page-img\"\n            srcSet={`${associationDetails[0].bigImage} 800w`}\n          ></img>\n          <h1>{params.associationName}</h1>\n          <h2>{associationDetails[0].chef}</h2>\n          {ifOpen && (\n            <div>\n              <img src={clock} alt=\"clock\"></img> <span>Open now</span>\n            </div>\n          )}\n          <nav className=\"categories-div\">\n            {mealsTypes.map((typeName) => (\n              <button\n                onClick={() => setFilterType(typeName)}\n                className=\"type-meal-link\" key={typeName}\n              >\n                {typeName}\n              </button>\n            ))}\n          </nav>\n\n          <div className=\"meal-by-type\">\n            {mealsTypes.map((type: any) => (\n                <div className=\"dishes-container\" key={type}>\n                  {filteredArr.map(\n                    (dish: any) =>\n                      type === dish.dishType && (\n                          <button\n                            className=\"to-dish-btn\"\n                            onClick={() => openDishCardHandler(dish.name)} key={dish._id}\n                          >\n                            <div className=\"association-item\">\n                              <DishSmallCard\n                                img={dish.mobileImage}\n                                signatureDesktopImage={dish.desktopImage}\n                                title={dish.name}\n                                detail={dish.description}\n                                price={dish.price}\n                                key={dish.key}\n                              ></DishSmallCard>\n                            </div>\n                          </button>\n                      )\n                  )}\n                </div>\n            ))}\n          </div>\n          <Footer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AssociationPage;\n"]},"metadata":{},"sourceType":"module"}