{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchVolunteering = createAsyncThunk(\"volunteering/fetchVolunteering\", async () => {\n  const response = await axios.get(\"http://localhost:8080/volunteering\");\n  return response.data;\n});\nconst volunteeringSlice = createSlice({\n  name: \"volunteering\",\n  initialState: {\n    volunteering: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchVolunteering.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchVolunteering.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.volunteering = action.payload.result;\n    }).addCase(fetchVolunteering.rejected, (state, action) => {\n      state.isLoading = false; //console.log(action.error.message);\n    });\n  }\n\n});\nexport const volunteeringActions = volunteeringSlice.actions;\nexport default volunteeringSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/store/volunteeringDataSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchVolunteering","response","get","data","volunteeringSlice","name","initialState","volunteering","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","rejected","volunteeringActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAGH,gBAAgB,CAAC,gCAAD,EAAmC,YAAY;AAC9F,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,oCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHgD,CAA1C;AAKP,MAAMC,iBAAiB,GAAGN,WAAW,CAAC;AACpCO,EAAAA,IAAI,EAAE,cAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,EADF;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GAN0B;;AAUpCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,iBAAiB,CAACe,OAD7B,EACsC,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACrDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,iBAAiB,CAACiB,SAJ7B,EAIwC,CAACN,KAAD,EAAQK,MAAR,KAAmB;AACvDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,YAAN,GAAoBS,MAAM,CAACE,OAAP,CAAeC,MAAnC;AACD,KAPH,EAQGL,OARH,CAQWd,iBAAiB,CAACoB,QAR7B,EAQuC,CAACT,KAAD,EAAQK,MAAR,KAAmB;AACtDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB,CADsD,CAEtD;AACD,KAXH;AAYD;;AAvBmC,CAAD,CAArC;AA0BA,OAAO,MAAMa,mBAAmB,GAAGjB,iBAAiB,CAACkB,OAA9C;AAEP,eAAelB,iBAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchVolunteering = createAsyncThunk(\"volunteering/fetchVolunteering\", async () => {\r\n  const response = await axios.get(\"http://localhost:8080/volunteering\");\r\n  return response.data;\r\n});\r\n\r\nconst volunteeringSlice = createSlice({\r\n  name: \"volunteering\",\r\n  initialState: {\r\n    volunteering: [],\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    toggle(state) {\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchVolunteering.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchVolunteering.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.volunteering= action.payload.result;\r\n      })\r\n      .addCase(fetchVolunteering.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        //console.log(action.error.message);\r\n      });\r\n  },\r\n});\r\n\r\nexport const volunteeringActions = volunteeringSlice.actions;\r\n\r\nexport default volunteeringSlice;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}