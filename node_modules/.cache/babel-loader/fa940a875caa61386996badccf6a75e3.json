{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchVolunteering } from \"../../../store/volunteeringDataSlice\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport \"./AllVolunteeringPage.scss\";\nimport SubmitButton from \"../../layout/button/SubmitButton\";\nimport VolunteeringPage from \"../volunteeringPage/VolunteeringPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VolunteeringGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    volunteering\n  } = useSelector(state => state.volunteering);\n  useEffect(() => {\n    dispatch(fetchVolunteering());\n    dispatch(fetchAssociations());\n  }, []);\n  const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\n  const [selectedVolunteering, setSelectedVolunteering] = useState({});\n\n  const openVolunteeringCardHandler = volunteer => {\n    setOpenVolunteeringCard(true);\n    setSelectedVolunteering(volunteer);\n  };\n\n  const passFilter = item => {\n    const foryouSuggestions = volunteering.filter(item => {\n      var _item$keywords$;\n\n      const keywords = localStorage.getItem('keywords');\n      const found = item === null || item === void 0 ? void 0 : (_item$keywords$ = item.keywords[0]) === null || _item$keywords$ === void 0 ? void 0 : _item$keywords$.split(',').some(r => keywords.split(',').indexOf(r) >= 0);\n      return found;\n    })[0].keywords;\n    const volunteeringDay = item.date.slice(0, 10);\n    const date = new Date();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    ;\n    const nextDay = date.getDate() + 1;\n    const today = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\n    const tommorrow = date.getFullYear() + \"-\" + month + \"-\" + nextDay;\n\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"today\":\n        if (today === volunteeringDay) return true;else return false;\n\n      case \"tommorrow\":\n        if (tommorrow === volunteeringDay) return true;else return false;\n\n      case \"foryou\":\n        foryouSuggestions.map(suggestion => {\n          item.kewords.map(keyword);\n        });\n        if (item.keywords === foryouSuggestions) return true;else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  function formatDate(Idate) {\n    const date = new Date(Idate);\n    const currentMonth = date.getMonth();\n    const monthString = currentMonth >= 10 ? currentMonth : `0${currentMonth}`;\n    const currentDate = date.getDate();\n    const dateString = currentDate >= 10 ? currentDate : `0${currentDate}`;\n    return `${date.getFullYear()}-${monthString}-${currentDate}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [openVolunteeringCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volunteering-container\",\n        onClick: () => setOpenVolunteeringCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-volunteering-page\",\n        onClick: () => setOpenVolunteeringCard(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VolunteeringPage, {\n        volunteering: selectedVolunteering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: !openVolunteeringCard && volunteering.map(item => {\n        if (passFilter(item)) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: formatDate(item.date) !== \"NaN-0NaN-NaN\" ? formatDate(item.date) : \"Unknown Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            value: \"Sign up here\",\n            onClick: () => openVolunteeringCardHandler(item.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VolunteeringGrid, \"LlBkCOAvj7Eh+aaETsVN8G/L0Os=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n\n_c = VolunteeringGrid;\nexport default VolunteeringGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"VolunteeringGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/components/pages/allVolunteeringPage/VolunteeringGrid.tsx"],"names":["Fragment","useEffect","useState","useSelector","fetchVolunteering","fetchAssociations","useAppDispatch","SubmitButton","VolunteeringPage","VolunteeringGrid","filter","dispatch","volunteering","state","openVolunteeringCard","setOpenVolunteeringCard","selectedVolunteering","setSelectedVolunteering","openVolunteeringCardHandler","volunteer","passFilter","item","foryouSuggestions","keywords","localStorage","getItem","found","split","some","r","indexOf","volunteeringDay","date","slice","Date","month","String","getMonth","padStart","nextDay","getDate","today","getFullYear","tommorrow","map","suggestion","kewords","keyword","formatDate","Idate","currentMonth","monthString","currentDate","dateString","name","address"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { fetchVolunteering } from \"../../../store/volunteeringDataSlice\";\r\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\r\nimport { useAppDispatch } from \"../../../store/store\";\r\nimport \"./AllVolunteeringPage.scss\";\r\nimport SubmitButton from \"../../layout/button/SubmitButton\";\r\nimport VolunteeringPage from \"../volunteeringPage/VolunteeringPage\";\r\n\r\nconst VolunteeringGrid = ({ filter }: any) => {\r\n  const dispatch = useAppDispatch();\r\n  const { volunteering } = useSelector((state: any) => state.volunteering);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchVolunteering());\r\n    dispatch(fetchAssociations());\r\n  }, []);\r\n\r\n  const [openVolunteeringCard, setOpenVolunteeringCard] = useState(false);\r\n  const [selectedVolunteering, setSelectedVolunteering] = useState({});\r\n\r\n  const openVolunteeringCardHandler = (volunteer: object) => {\r\n    setOpenVolunteeringCard(true);\r\n    setSelectedVolunteering(volunteer);\r\n  };\r\n\r\n  const passFilter = (item: any) => {\r\n    const foryouSuggestions= volunteering.filter((item: any)=> {\r\n      const keywords: any = localStorage.getItem('keywords')\r\n      const found = item?.keywords[0]?.split(',').some((r: any)=> keywords.split(',').indexOf(r) >= 0)\r\n      return found;\r\n    })[0].keywords;\r\n    const volunteeringDay = item.date.slice(0, 10);\r\n    const date = new Date();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');;\r\n    const nextDay = date.getDate() + 1;\r\n    const today = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\r\n    const tommorrow = date.getFullYear() + \"-\" + month + \"-\" + nextDay;\r\n    switch (filter) {\r\n      case \"all\":\r\n        return true;\r\n      case \"today\":\r\n        if (today === volunteeringDay) return true;\r\n        else return false;\r\n      case \"tommorrow\":\r\n        if (tommorrow === volunteeringDay) return true;\r\n        else return false;\r\n      case \"foryou\":\r\n        foryouSuggestions.map((suggestion:any)=> {\r\n          item.kewords.map((keyword))\r\n        })\r\n        if (item.keywords === foryouSuggestions) return true;\r\n        else return false;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  function formatDate(Idate: any) {\r\n    const date = new Date(Idate)\r\n    const currentMonth = date.getMonth();\r\n    const monthString = currentMonth >= 10 ? currentMonth : `0${currentMonth}`;\r\n    const currentDate = date.getDate();\r\n    const dateString = currentDate >= 10 ? currentDate : `0${currentDate}`;\r\n    return `${date.getFullYear()}-${monthString}-${currentDate}`;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      {openVolunteeringCard && (\r\n        <Fragment>\r\n          <button\r\n            className=\"volunteering-container\"\r\n            onClick={() => setOpenVolunteeringCard(false)}\r\n          ></button>\r\n          <button\r\n            className=\"close-volunteering-page\"\r\n            onClick={() => setOpenVolunteeringCard(false)}\r\n          >\r\n            X\r\n          </button>\r\n          <br />\r\n          <VolunteeringPage volunteering={selectedVolunteering}></VolunteeringPage>\r\n        </Fragment>\r\n      )}\r\n      <div className=\"feed\">\r\n        {!openVolunteeringCard &&\r\n          volunteering.map((item: any) => {\r\n            if (passFilter(item))\r\n              return (\r\n                <div className=\"feed-container\" key={item.name}>\r\n                  <div>\r\n                    <h1>{item.name}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h3>{formatDate(item.date) !== \"NaN-0NaN-NaN\" ? formatDate(item.date) : \"Unknown Date\"}</h3>\r\n                  </div>\r\n                  <div>\r\n                    <h3>{item.address}</h3>\r\n                  </div>\r\n                  <SubmitButton\r\n                    value={\"Sign up here\"}\r\n                    onClick={() => openVolunteeringCardHandler(item.name)}\r\n                  ></SubmitButton>\r\n                </div>\r\n              );\r\n          })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VolunteeringGrid;\r\n"]},"metadata":{},"sourceType":"module"}