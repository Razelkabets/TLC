{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapValue = mapValue;\nexports.parseNumericPattern = parseNumericPattern;\nexports.parseTimezonePattern = parseTimezonePattern;\nexports.parseAnyDigitsSigned = parseAnyDigitsSigned;\nexports.parseNDigits = parseNDigits;\nexports.parseNDigitsSigned = parseNDigitsSigned;\nexports.dayPeriodEnumToHours = dayPeriodEnumToHours;\nexports.normalizeTwoDigitYear = normalizeTwoDigitYear;\nexports.isLeapYearIndex = isLeapYearIndex;\n\nvar _index = require(\"../../constants/index.js\");\n\nvar _constants = require(\"./constants.js\");\n\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\n\nfunction parseNumericPattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * _index.millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(_constants.numericPatterns.anyDigitsSigned, dateString);\n}\n\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigit, dateString);\n\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigits, dateString);\n\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigits, dateString);\n\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigits, dateString);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), dateString);\n  }\n}\n\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigitSigned, dateString);\n\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigitsSigned, dateString);\n\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigitsSigned, dateString);\n\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigitsSigned, dateString);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), dateString);\n  }\n}\n\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/node_modules/date-fns/parse/_lib/utils.js"],"names":["Object","defineProperty","exports","value","mapValue","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","isLeapYearIndex","_index","require","_constants","parseFnResult","mapFn","rest","pattern","dateString","matchResult","match","parseInt","slice","length","sign","hours","minutes","seconds","millisecondsInHour","millisecondsInMinute","millisecondsInSecond","numericPatterns","anyDigitsSigned","n","singleDigit","twoDigits","threeDigits","fourDigits","RegExp","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","dayPeriod","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","Math","floor","isPreviousCentury","year"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapValue = mapValue;\nexports.parseNumericPattern = parseNumericPattern;\nexports.parseTimezonePattern = parseTimezonePattern;\nexports.parseAnyDigitsSigned = parseAnyDigitsSigned;\nexports.parseNDigits = parseNDigits;\nexports.parseNDigitsSigned = parseNDigitsSigned;\nexports.dayPeriodEnumToHours = dayPeriodEnumToHours;\nexports.normalizeTwoDigitYear = normalizeTwoDigitYear;\nexports.isLeapYearIndex = isLeapYearIndex;\n\nvar _index = require(\"../../constants/index.js\");\n\nvar _constants = require(\"./constants.js\");\n\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\n\nfunction parseNumericPattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * _index.millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(_constants.numericPatterns.anyDigitsSigned, dateString);\n}\n\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigit, dateString);\n\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigits, dateString);\n\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigits, dateString);\n\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigits, dateString);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), dateString);\n  }\n}\n\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigitSigned, dateString);\n\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigitsSigned, dateString);\n\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigitsSigned, dateString);\n\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigitsSigned, dateString);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), dateString);\n  }\n}\n\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}"]},"metadata":{},"sourceType":"script"}