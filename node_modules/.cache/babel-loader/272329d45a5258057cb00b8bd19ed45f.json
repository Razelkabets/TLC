{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport volunteeringSlice from \"./volunteeringDataSlice\";\nimport associationsSlice from \"./AssociationDataSlice\";\nimport foundersSlice from \"./founderDataSlice\";\nimport newAssociationsSlice from \"./newAssociationsSlice\";\nimport popularAssociationsSlice from \"./popularAssociationsSlice\";\nimport openAssociationsSlice from \"./openAssociationsSlice\";\nimport usersSlice from \"./usersSlice\";\nconst store = configureStore({\n  reducer: {\n    founders: foundersSlice.reducer,\n    associations: associationsSlice.reducer,\n    volunteering: volunteeringSlice.reducer,\n    newAssociations: newAssociationsSlice.reducer,\n    popularAssociations: popularAssociationsSlice.reducer,\n    openAssociations: openAssociationsSlice.reducer,\n    users: usersSlice.reducer\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport default store;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/store/store.ts"],"names":["configureStore","useDispatch","useSelector","volunteeringSlice","associationsSlice","foundersSlice","newAssociationsSlice","popularAssociationsSlice","openAssociationsSlice","usersSlice","store","reducer","founders","associations","volunteering","newAssociations","popularAssociations","openAssociations","users","useAppDispatch","useAppSelector"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,KAAK,GAAGV,cAAc,CAAC;AAC3BW,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEP,aAAa,CAACM,OADjB;AAEPE,IAAAA,YAAY,EAAET,iBAAiB,CAACO,OAFzB;AAGPG,IAAAA,YAAY,EAAEX,iBAAiB,CAACQ,OAHzB;AAIPI,IAAAA,eAAe,EAAET,oBAAoB,CAACK,OAJ/B;AAKPK,IAAAA,mBAAmB,EAAET,wBAAwB,CAACI,OALvC;AAMPM,IAAAA,gBAAgB,EAAET,qBAAqB,CAACG,OANjC;AAOPO,IAAAA,KAAK,EAAET,UAAU,CAACE;AAPX;AADkB,CAAD,CAA5B;AAaA,OAAO,MAAMQ,cAAc,GAAG;AAAA;;AAAA,SAAMlB,WAAW,EAAjB;AAAA,CAAvB;;GAAMkB,c;UAAuBlB,W;;;AACpC,OAAO,MAAMmB,cAAc,GAAGlB,WAAvB;AAEP,eAAeQ,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport volunteeringSlice from \"./volunteeringDataSlice\";\nimport associationsSlice from \"./AssociationDataSlice\";\nimport foundersSlice from \"./founderDataSlice\";\nimport newAssociationsSlice from \"./newAssociationsSlice\";\nimport popularAssociationsSlice from \"./popularAssociationsSlice\";\nimport openAssociationsSlice from \"./openAssociationsSlice\";\nimport usersSlice from \"./usersSlice\";\n\nconst store = configureStore({\n  reducer: {\n    founders: foundersSlice.reducer,\n    associations: associationsSlice.reducer,\n    volunteering: volunteeringSlice.reducer,\n    newAssociations: newAssociationsSlice.reducer,\n    popularAssociations: popularAssociationsSlice.reducer,\n    openAssociations: openAssociationsSlice.reducer,\n    users: usersSlice.reducer\n  },\n});\n\n\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}