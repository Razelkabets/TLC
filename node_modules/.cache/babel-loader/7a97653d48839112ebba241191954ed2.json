{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const response = await axios.get(\"http://localhost:8080/auth\");\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.users = action.payload.result;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.isLoading = false; //console.log(action.error.message);\n    });\n  }\n\n});\nexport const usersActions = usersSlice.actions;\nexport default usersSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/store/usersSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchUsers","response","get","data","usersSlice","name","initialState","users","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","rejected","usersActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACzE,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,4BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHyC,CAAnC;AAKP,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFe;AAM7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GANmB;;AAU7BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,UAAU,CAACe,OADtB,EAC+B,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAC9CL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,UAAU,CAACiB,SAJtB,EAIiC,CAACN,KAAD,EAAQK,MAAR,KAAmB;AAChDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAaS,MAAM,CAACE,OAAP,CAAeC,MAA5B;AACD,KAPH,EAQGL,OARH,CAQWd,UAAU,CAACoB,QARtB,EAQgC,CAACT,KAAD,EAAQK,MAAR,KAAmB;AAC/CL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB,CAD+C,CAE/C;AACD,KAXH;AAYD;;AAvB4B,CAAD,CAA9B;AA0BA,OAAO,MAAMa,YAAY,GAAGjB,UAAU,CAACkB,OAAhC;AAEP,eAAelB,UAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\r\n  const response = await axios.get(\"http://localhost:8080/auth\");\r\n  return response.data;\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    users: [],\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    toggle(state) {\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.users= action.payload.result;        \r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        //console.log(action.error.message);\r\n      });\r\n  },\r\n});\r\n\r\nexport const usersActions = usersSlice.actions;\r\n\r\nexport default usersSlice;\r\n"]},"metadata":{},"sourceType":"module"}