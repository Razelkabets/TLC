{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchOpenAssociations = createAsyncThunk(\"restaurants/fetchOpenAssociations\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/open\");\n  return response.data;\n});\nconst openAssociationsSlice = createSlice({\n  name: \"openAssociations\",\n  initialState: {\n    openRestaurants: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchOpenAssociations.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchOpenRestaurants.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.openRestaurants = action.payload.result;\n    });\n  }\n\n});\nexport const restaurantsActions = openRestaurantsSlice.actions;\nexport default openRestaurantsSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/tlc/src/store/openAssociationsSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchOpenAssociations","response","get","data","openAssociationsSlice","name","initialState","openRestaurants","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fetchOpenRestaurants","fulfilled","payload","result","restaurantsActions","openRestaurantsSlice","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAGH,gBAAgB,CAAC,mCAAD,EAAsC,YAAY;AACrG,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,wCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHoD,CAA9C;AAKP,MAAMC,qBAAqB,GAAGN,WAAW,CAAC;AACxCO,EAAAA,IAAI,EAAE,kBADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,EADL;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAF0B;AAMxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GAN8B;;AAUxCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,qBAAqB,CAACe,OADjC,EAC0C,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACzDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWG,oBAAoB,CAACC,SAJhC,EAI2C,CAACP,KAAD,EAAQK,MAAR,KAAmB;AAC1DL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,eAAN,GAAuBS,MAAM,CAACG,OAAP,CAAeC,MAAtC;AACD,KAPH;AAQD;;AAnBuC,CAAD,CAAzC;AAsBA,OAAO,MAAMC,kBAAkB,GAAGC,oBAAoB,CAACC,OAAhD;AAEP,eAAeD,oBAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchOpenAssociations = createAsyncThunk(\"restaurants/fetchOpenAssociations\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/open\");\n  return response.data;\n});\n\nconst openAssociationsSlice = createSlice({\n  name: \"openAssociations\",\n  initialState: {\n    openRestaurants: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchOpenAssociations.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchOpenRestaurants.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.openRestaurants= action.payload.result;        \n      })\n  },\n});\n\nexport const restaurantsActions = openRestaurantsSlice.actions;\n\nexport default openRestaurantsSlice;\n"]},"metadata":{},"sourceType":"module"}