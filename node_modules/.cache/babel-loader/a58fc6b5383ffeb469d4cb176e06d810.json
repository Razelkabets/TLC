{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/TLC/src/components/pages/allAssociationsPage/AssociationsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllAssociations.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect } from \"react\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { fetchNewAssociations } from \"../../../store/newAssociationsSlice\";\nimport { fetchPopularAssociations } from \"../../../store/popularAssociationsSlice\";\nimport { fetchOpenAssociations } from \"../../../store/openAssociationsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssociationsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    associations\n  } = useSelector(state => state.associations);\n  useEffect(() => {\n    dispatch(fetchAssociations());\n    dispatch(fetchNewAssociations());\n    dispatch(fetchPopularAssociations());\n    dispatch(fetchOpenAssociations());\n  }, []);\n\n  const passFilter = item => {\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"new\":\n        if (item.isNewAssociation) return true;else return false;\n\n      case \"popular\":\n        if (item.isPopular) return true;else return false;\n\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"associations-grid\",\n    children: associations.map(item => {\n      if (passFilter(item)) return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/associations/${item.name}`,\n        className: \"to-association-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: \"\",\n          img: item.mobileImage\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AssociationsGrid, \"0Br06DbzhpHzjf7RXtK+GU3jQds=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n\n_c = AssociationsGrid;\nexport default AssociationsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssociationsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/TLC/src/components/pages/allAssociationsPage/AssociationsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","useEffect","fetchAssociations","fetchNewAssociations","fetchPopularAssociations","fetchOpenAssociations","AssociationsGrid","filter","dispatch","associations","state","passFilter","item","isNewAssociation","isPopular","opening","openingHour","split","closing","closingHour","date","Date","now","getHours","map","name","mobileImage","_id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,wBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,SAASC,qBAAT,QAAqC,sCAArC;;;AAEA,MAAMC,gBAAgB,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAE5C,QAAMC,QAAQ,GAAGR,cAAc,EAA/B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAmBX,WAAW,CAAEY,KAAD,IAAgBA,KAAK,CAACD,YAAvB,CAApC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;AACAM,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACAK,IAAAA,QAAQ,CAACJ,wBAAwB,EAAzB,CAAR;AACAI,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AACD,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMM,UAAU,GAAIC,IAAD,IAAe;AAChC,YAAQL,MAAR;AACE,WAAK,KAAL;AACE,eAAO,IAAP;;AACF,WAAK,KAAL;AACE,YAAIK,IAAI,CAACC,gBAAT,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,KAAP;;AACP,WAAK,SAAL;AACE,YAAID,IAAI,CAACE,SAAT,EAAoB,OAAO,IAAP,CAApB,KACK,OAAO,KAAP;;AACP,WAAK,MAAL;AACE,cAAMC,OAAO,GAAGH,IAAI,CAACI,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMC,OAAO,GAAGN,IAAI,CAACO,WAAL,CAAiBF,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMG,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,cAAMC,GAAG,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,YAAID,GAAG,IAAIP,OAAP,IAAkBO,GAAG,IAAIJ,OAA7B,EAAsC,OAAO,IAAP,CAAtC,KACK,OAAO,KAAP;;AACP;AACE,eAAO,IAAP;AAjBJ;AAmBD,GApBD;;AAqBA,sBACQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACGT,YAAY,CAACe,GAAb,CAAkBZ,IAAD,IAAe;AAC9B,UAAID,UAAU,CAACC,IAAD,CAAd,EACA,oBAED,QAAC,IAAD;AACE,QAAA,EAAE,EAAG,iBAAgBA,IAAI,CAACa,IAAK,EADjC;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA,+BAKE,QAAC,SAAD;AAEE,UAAA,KAAK,EAAEb,IAAI,CAACa,IAFd;AAGE,UAAA,MAAM,EAAE,EAHV;AAIE,UAAA,GAAG,EAAEb,IAAI,CAACc;AAJZ,WACOd,IAAI,CAACa,IADZ;AAAA;AAAA;AAAA;AAAA;AALF,SAGOb,IAAI,CAACe,GAHZ;AAAA;AAAA;AAAA;AAAA,cAFC;AAcF,KAhBA;AADH;AAAA;AAAA;AAAA;AAAA,UADR;AAqBD,CArDD;;GAAMrB,gB;UAEaN,c,EACQF,W;;;KAHrBQ,gB;AAsDN,eAAeA,gBAAf","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllAssociations.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect } from \"react\";\nimport { fetchAssociations } from \"../../../store/AssociationDataSlice\";\nimport { fetchNewAssociations } from \"../../../store/newAssociationsSlice\";\nimport { fetchPopularAssociations } from \"../../../store/popularAssociationsSlice\";\nimport { fetchOpenAssociations} from \"../../../store/openAssociationsSlice\";\n\nconst AssociationsGrid = ({ filter }: any) => {\n\n  const dispatch = useAppDispatch();\n  const { associations } = useSelector((state: any) => state.associations);\n\n  useEffect(() => {\n    dispatch(fetchAssociations());\n    dispatch(fetchNewAssociations());\n    dispatch(fetchPopularAssociations());\n    dispatch(fetchOpenAssociations());\n  }, []);\n  const passFilter = (item: any) => {\n    switch (filter) {\n      case \"all\":\n        return true;\n      case \"new\":\n        if (item.isNewAssociation) return true;\n        else return false;\n      case \"popular\":\n        if (item.isPopular) return true;\n        else return false;\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;\n        else return false;\n      default:\n        return true;\n    }\n  };\n  return (\n          <div className=\"associations-grid\">\n            {associations.map((item: any) => {\n               if (passFilter(item))\n               return (\n\n              <Link\n                to={`/associations/${item.name}`}\n                className=\"to-association-btn\"\n                key={item._id}\n              >\n                <BeigeCard\n                  key={item.name}\n                  title={item.name}\n                  detail={\"\"}\n                  img={item.mobileImage}\n                ></BeigeCard>\n              </Link>)\n            })}\n          </div>\n  );\n};\nexport default AssociationsGrid;\n"]},"metadata":{},"sourceType":"module"}